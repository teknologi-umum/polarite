name: Deploy

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  scan:
    name: Secret scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Setup jq
        uses: dcarbone/install-jq-action@v2.1.0

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --debug --only-verified

  ci:
    name: CI / ${{ matrix.arch.arch }}
    runs-on: ${{ matrix.arch.runs-on }}
    timeout-minutes: 20
    container: golang:1.24
    strategy:
      fail-fast: true
      matrix:
        arch:
          - runs-on: ubuntu-24.04
            arch: amd64
          - runs-on: ubuntu-24.04-arm
            arch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        run: go build -buildvcs=false .

      - name: Run test & coverage
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
        env:
          ENVIRONMENT: development
          PORT: 3000
          TZ: UTC

      - uses: codecov/codecov-action@v3

  release:
    name: Release
    needs:
      - ci
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=edge
            type=sha
          labels: |
            org.opencontainers.image.title=Polarite
            org.opencontainers.image.description=Polarite is a Pastebin alternative made for simplicity written in Go.
            org.opencontainers.image.authors=Teknologi Umum

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
